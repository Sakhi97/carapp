{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/car-app/carapp/src/components/Carlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport AddCar from \"./AddCar\";\nimport { API_URL } from \"../constants\";\nimport EditCar from \"./EditCar\";\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-material.css';\n\n// Separate here all functions in own file (delete, edit, ...)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Carlist() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [msg, setMsg] = useState();\n\n  // We are not going to use setColumnDefs, so no need to define it\n  const [columnDefs] = useState([{\n    field: 'brand',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'model',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'color',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'fuel',\n    sortable: true,\n    filter: true,\n    width: 100\n  }, {\n    field: 'year',\n    sortable: true,\n    filter: true,\n    width: 100\n  }, {\n    field: 'price',\n    sortable: true,\n    filter: true,\n    width: 100\n  }, {\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(EditCar, {\n      params: params.data,\n      updateCar: updateCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }, this),\n    width: 120\n  }, {\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"error\",\n      onClick: () => deleteCar(params),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this),\n    width: 120\n  }]);\n  const deleteCar = params => {\n    if (window.confirm('Are you sure?')) {\n      fetch(params.data._links.car.href, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.ok) {\n          setMsg(\"Car deleted successfully\");\n          setOpen(true);\n          getCars();\n        } else {\n          alert('Something went wrong in deletion');\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  const getCars = () => {\n    fetch(API_URL + '/cars').then(response => {\n      if (response.ok) return response.json();else alert('Something went wrong in GET request');\n    }).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n\n  // use parameter \"car\" to add the car\n  const addCar = car => {\n    fetch(API_URL + 'cars', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) {\n        getCars();\n      } else {\n        alert('Something went wrong in addition: ' + response.statusText);\n      }\n    }).catch(err => console.error(err));\n  };\n  const updateCar = (updatedCar, url) => {\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedCar)\n    }).then(response => {\n      if (response.ok) {\n        setMsg(\"Car edited successfully\");\n        setOpen(true);\n        getCars();\n      } else {\n        alert('Something went wrong when editing');\n      }\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    //Fetch cars (must be httpS)\n    getCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCar, {\n      addCar: addCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        width: '80%',\n        height: 600,\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact\n      //Define where the data comes from: \n      , {\n        rowData: cars,\n        columnDefs: columnDefs,\n        pagination: true,\n        paginationPageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      message: msg,\n      autoHideDuration: 3000,\n      onClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Carlist, \"04q3X8rJmA7BHK2GwZVwdmjGDT0=\");\n_c = Carlist;\nexport default Carlist;\nvar _c;\n$RefreshReg$(_c, \"Carlist\");","map":{"version":3,"names":["React","useState","useEffect","AgGridReact","Button","Snackbar","AddCar","API_URL","EditCar","jsxDEV","_jsxDEV","Fragment","_Fragment","Carlist","_s","cars","setCars","open","setOpen","msg","setMsg","columnDefs","field","sortable","filter","width","cellRenderer","params","data","updateCar","fileName","_jsxFileName","lineNumber","columnNumber","size","color","onClick","deleteCar","children","window","confirm","fetch","_links","car","href","method","then","response","ok","getCars","alert","catch","err","console","error","json","_embedded","addCar","headers","body","JSON","stringify","statusText","updatedCar","url","className","style","height","margin","rowData","pagination","paginationPageSize","message","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/car-app/carapp/src/components/Carlist.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport AddCar from \"./AddCar\";\nimport { API_URL } from \"../constants\";\nimport EditCar from \"./EditCar\";\n\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-material.css';\n\n// Separate here all functions in own file (delete, edit, ...)\n\nfunction Carlist() {\n    const [cars, setCars] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [msg, setMsg] = useState();\n\n    // We are not going to use setColumnDefs, so no need to define it\n    const [columnDefs] = useState([\n        {field: 'brand', sortable: true, filter: true},\n        {field: 'model', sortable: true, filter: true},\n        {field: 'color', sortable: true, filter: true},\n        {field: 'fuel', sortable: true, filter: true, width: 100},\n        {field: 'year', sortable: true, filter: true, width: 100},\n        {field: 'price', sortable: true, filter: true, width: 100}, \n        {\n            cellRenderer: params => <EditCar params={params.data} updateCar={updateCar} />,\n            width: 120\n        },\n        {cellRenderer: params => \n          <Button \n            size='small' \n            color='error'\n            onClick={() => deleteCar(params)}\n          >\n              Delete\n            </Button>\n            , width: 120}   \n    ])\n\n    const deleteCar = (params) => {\n        if (window.confirm('Are you sure?')) {\n            fetch(params.data._links.car.href, {method: 'DELETE'})\n            .then(response => {\n                if(response.ok) {\n                    setMsg(\"Car deleted successfully\");\n                    setOpen(true);\n                    getCars();\n                }\n                else {\n                    alert('Something went wrong in deletion');\n                }\n            })\n            .catch(err => console.error(err))\n        }    \n    }\n\n    const getCars = () => {\n        fetch(API_URL + '/cars')\n        .then(response => {\n            if(response.ok)\n                return response.json();\n            else\n                alert('Something went wrong in GET request');\n        })\n        .then(data => setCars(data._embedded.cars))\n        .catch(err => console.error(err))\n    }\n\n    // use parameter \"car\" to add the car\n    const addCar = (car) => {\n        fetch(API_URL + 'cars', {\n            method: 'POST',\n            headers: {'Content-type':'application/json'},\n            body: JSON.stringify(car)\n        })\n        .then(response => {\n            if(response.ok) {\n                getCars();\n            }\n            else {\n                alert('Something went wrong in addition: ' + response.statusText);\n            }\n        })\n        .catch(err => console.error(err))\n    }\n\n    const updateCar = (updatedCar, url) => {\n\n        fetch(url, {\n            method: 'PUT',\n            headers: {'Content-type':'application/json'},\n            body: JSON.stringify(updatedCar)\n        })\n        .then(response => {\n            if (response.ok) {\n                setMsg(\"Car edited successfully\");\n                setOpen(true);\n                getCars();\n            }\n            else {\n                alert('Something went wrong when editing');\n            }\n        })\n        .catch(err => console.error(err))\n    }\n\n    useEffect(() => {\n        //Fetch cars (must be httpS)\n        getCars();\n    }, []);\n\n    return (\n        <>\n            <AddCar addCar={addCar}/>\n            <div \n              className='ag-theme-material'\n              style={{width:'80%', height:600, margin:'auto'}}>\n              <AgGridReact\n                //Define where the data comes from: \n                rowData={cars}\n                columnDefs={columnDefs}\n                pagination={true}\n                paginationPageSize={10}\n              />\n            </div>\n            <Snackbar \n                open={open}\n                message={msg}\n                autoHideDuration={3000}\n                onClose={() => setOpen(false)}\n            />\n        </>\n    )\n}\n\nexport default Carlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}